WARNING:tensorflow:`period` argument is deprecated. Please use `save_freq` to specify the frequency in number of batches seen.
WARNING  `period` argument is deprecated. Please use `save_freq` to specify the frequency in number of batches seen.
2023-04-03 15:23:46.763438: I tensorflow/core/grappler/devices.cc:66] Number of eligible GPUs (core count >= 8, compute capability >= 0.0): 4
2023-04-03 15:23:46.763679: I tensorflow/core/grappler/clusters/single_machine.cc:357] Starting new session
2023-04-03 15:23:46.799267: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 78600 MB memory:  -> device: 0, name: NVIDIA A100 80GB PCIe, pci bus id: 0000:17:00.0, compute capability: 8.0
2023-04-03 15:23:46.803129: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 78600 MB memory:  -> device: 1, name: NVIDIA A100 80GB PCIe, pci bus id: 0000:65:00.0, compute capability: 8.0
2023-04-03 15:23:46.804364: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:2 with 78600 MB memory:  -> device: 2, name: NVIDIA A100 80GB PCIe, pci bus id: 0000:ca:00.0, compute capability: 8.0
2023-04-03 15:23:46.805902: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:3 with 78600 MB memory:  -> device: 3, name: NVIDIA A100 80GB PCIe, pci bus id: 0000:e3:00.0, compute capability: 8.0
2023-04-03 15:23:46.830998: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:1137] Optimization results for grappler item: graph_to_optimize
  function_optimizer: function_optimizer did nothing. time = 0.03ms.
  function_optimizer: function_optimizer did nothing. time = 0.001ms.
Epoch 1/10
WARNING:tensorflow:From /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/ops/math_ops.py:3777: tensor_shape_from_node_def_name (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.compat.v1.graph_util.tensor_shape_from_node_def_name`
WARNING  From /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/ops/math_ops.py:3777: tensor_shape_from_node_def_name (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.compat.v1.graph_util.tensor_shape_from_node_def_name`
2023-04-03 15:23:47.100321: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)
2023-04-03 15:23:50.711434: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.
37/37 - 5s - loss: 0.5014 - accuracy: 0.8120 - auc: 0.5358 - precision: 0.3453 - recall: 0.0567 - balanced_accuracy: 0.5167 - val_loss: 0.4523 - val_accuracy: 0.8252 - val_auc: 0.6170 - val_precision: 0.8571 - val_recall: 0.0283 - val_balanced_accuracy: 0.5117
Epoch 2/10
37/37 - 0s - loss: 0.4741 - accuracy: 0.8167 - auc: 0.6016 - precision: 0.4400 - recall: 0.0909 - balanced_accuracy: 0.5327 - val_loss: 0.4355 - val_accuracy: 0.8311 - val_auc: 0.6709 - val_precision: 0.9286 - val_recall: 0.0613 - val_balanced_accuracy: 0.5360
Epoch 3/10
37/37 - 0s - loss: 0.4495 - accuracy: 0.8260 - auc: 0.6515 - precision: 0.5622 - recall: 0.1228 - balanced_accuracy: 0.5524 - val_loss: 0.4213 - val_accuracy: 0.8387 - val_auc: 0.7064 - val_precision: 0.8889 - val_recall: 0.1132 - val_balanced_accuracy: 0.5650
Epoch 4/10
37/37 - 0s - loss: 0.4371 - accuracy: 0.8291 - auc: 0.6772 - precision: 0.5819 - recall: 0.1594 - balanced_accuracy: 0.5657 - val_loss: 0.4113 - val_accuracy: 0.8370 - val_auc: 0.7279 - val_precision: 0.7879 - val_recall: 0.1226 - val_balanced_accuracy: 0.5674
Epoch 5/10
37/37 - 0s - loss: 0.4377 - accuracy: 0.8315 - auc: 0.6735 - precision: 0.6150 - recall: 0.1547 - balanced_accuracy: 0.5665 - val_loss: 0.4046 - val_accuracy: 0.8395 - val_auc: 0.7399 - val_precision: 0.8056 - val_recall: 0.1368 - val_balanced_accuracy: 0.5732
Epoch 6/10
37/37 - 0s - loss: 0.4178 - accuracy: 0.8395 - auc: 0.7140 - precision: 0.6776 - recall: 0.1960 - balanced_accuracy: 0.5903 - val_loss: 0.3975 - val_accuracy: 0.8454 - val_auc: 0.7526 - val_precision: 0.8222 - val_recall: 0.1745 - val_balanced_accuracy: 0.5907
Epoch 7/10
37/37 - 0s - loss: 0.4061 - accuracy: 0.8427 - auc: 0.7345 - precision: 0.6809 - recall: 0.2267 - balanced_accuracy: 0.6034 - val_loss: 0.3930 - val_accuracy: 0.8446 - val_auc: 0.7584 - val_precision: 0.8043 - val_recall: 0.1745 - val_balanced_accuracy: 0.5902
Epoch 8/10
37/37 - 0s - loss: 0.3973 - accuracy: 0.8437 - auc: 0.7512 - precision: 0.7004 - recall: 0.2208 - balanced_accuracy: 0.6002 - val_loss: 0.3891 - val_accuracy: 0.8446 - val_auc: 0.7644 - val_precision: 0.8043 - val_recall: 0.1745 - val_balanced_accuracy: 0.5902
Epoch 9/10
INFO     Computation time for training the single-label model for AR: 0.16 min
37/37 - 0s - loss: 0.3961 - accuracy: 0.8463 - auc: 0.7503 - precision: 0.7003 - recall: 0.2456 - balanced_accuracy: 0.6088 - val_loss: 0.3852 - val_accuracy: 0.8421 - val_auc: 0.7703 - val_precision: 0.7193 - val_recall: 0.1934 - val_balanced_accuracy: 0.5957
Epoch 10/10
37/37 - 0s - loss: 0.3861 - accuracy: 0.8488 - auc: 0.7678 - precision: 0.7205 - recall: 0.2527 - balanced_accuracy: 0.6159 - val_loss: 0.3820 - val_accuracy: 0.8429 - val_auc: 0.7744 - val_precision: 0.7241 - val_recall: 0.1981 - val_balanced_accuracy: 0.5992
Epoch 00010: val_loss improved from inf to 0.38199, saving model to /home/zadubrov/output/results_train/AR_single-labeled_Fold-0.model.weights.hdf5
<IPython.core.display.HTML object>
(array([0, 0, 0, ..., 0, 0, 0]), array([   0,    1,    2, ..., 2045, 2046, 2047]))
[[False False False ... False False False]
 [False False False ... False False False]]
Traceback (most recent call last):
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/runpy.py", line 197, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/__main__.py", line 415, in <module>
    main()
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/__main__.py", line 392, in main
    train(fixed_opts)
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/__main__.py", line 190, in train
    sl.train_single_label_models(df=df, opts=opts)
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/single_label_model.py", line 551, in train_single_label_models
    performance = fit_and_evaluate_model(x_train=x_train, x_test=x_test, y_train=y_train, y_test=y_test,
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/single_label_model.py", line 422, in fit_and_evaluate_model
    sd.shap_explain(x_train, model, target, opts.outputDir, drop_values=True, threshold=10, save_values=True)
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/shap_dfpl.py", line 22, in shap_explain
    shap_values = explainer(x_train_to_explain)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/explainers/_permutation.py", line 68, in __call__
    return super().__call__(
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/explainers/_permutation.py", line 82, in __call__
    return super().__call__(
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/explainers/_explainer.py", line 266, in __call__
    row_result = self.explain_row(
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/explainers/_permutation.py", line 140, in explain_row
    outputs = fm(masks, zero_index=0, batch_size=batch_size)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/utils/_masked_model.py", line 57, in __call__
    return self._delta_masking_call(masks, zero_index=zero_index, batch_size=batch_size)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/utils/_masked_model.py", line 203, in _delta_masking_call
    outputs = self.model(*subset_masked_inputs)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/models/_model.py", line 26, in __call__
    out = self.inner_model(*args)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/keras/engine/training.py", line 1751, in predict
    tmp_batch_outputs = self.predict_function(iterator)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/eager/def_function.py", line 885, in __call__
    result = self._call(*args, **kwds)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/eager/def_function.py", line 933, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/eager/def_function.py", line 759, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/eager/function.py", line 3066, in _get_concrete_function_internal_garbage_collected
    graph_function, _ = self._maybe_define_function(args, kwargs)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/eager/function.py", line 3463, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/eager/function.py", line 3298, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/framework/func_graph.py", line 1007, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/eager/def_function.py", line 668, in wrapped_fn
    out = weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/framework/func_graph.py", line 994, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:
    /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/keras/engine/training.py:1586 predict_function  *
        return step_function(self, iterator)
    /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/keras/engine/training.py:1576 step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/distribute/distribute_lib.py:1286 run
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/distribute/distribute_lib.py:2849 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/distribute/distribute_lib.py:3632 _call_for_each_replica
        return fn(*args, **kwargs)
    /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/keras/engine/training.py:1569 run_step  **
        outputs = model.predict_step(data)
    /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/keras/engine/training.py:1537 predict_step
        return self(x, training=False)
    /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/keras/engine/base_layer.py:1020 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs, self.name)
    /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/keras/engine/input_spec.py:250 assert_input_compatibility
        raise ValueError(
    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 2048 but received input with shape (None, 1886)