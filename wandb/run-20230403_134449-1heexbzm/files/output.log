WARNING:tensorflow:`period` argument is deprecated. Please use `save_freq` to specify the frequency in number of batches seen.
WARNING  `period` argument is deprecated. Please use `save_freq` to specify the frequency in number of batches seen.
2023-04-03 13:45:11.379897: I tensorflow/core/grappler/devices.cc:66] Number of eligible GPUs (core count >= 8, compute capability >= 0.0): 4
2023-04-03 13:45:11.380150: I tensorflow/core/grappler/clusters/single_machine.cc:357] Starting new session
2023-04-03 13:45:11.409126: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 78600 MB memory:  -> device: 0, name: NVIDIA A100 80GB PCIe, pci bus id: 0000:17:00.0, compute capability: 8.0
2023-04-03 13:45:11.411823: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 78600 MB memory:  -> device: 1, name: NVIDIA A100 80GB PCIe, pci bus id: 0000:65:00.0, compute capability: 8.0
2023-04-03 13:45:11.413053: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:2 with 78600 MB memory:  -> device: 2, name: NVIDIA A100 80GB PCIe, pci bus id: 0000:ca:00.0, compute capability: 8.0
2023-04-03 13:45:11.414056: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:3 with 78600 MB memory:  -> device: 3, name: NVIDIA A100 80GB PCIe, pci bus id: 0000:e3:00.0, compute capability: 8.0
2023-04-03 13:45:11.442455: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:1137] Optimization results for grappler item: graph_to_optimize
  function_optimizer: function_optimizer did nothing. time = 0.033ms.
  function_optimizer: function_optimizer did nothing. time = 0.001ms.
WARNING:tensorflow:From /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/ops/math_ops.py:3777: tensor_shape_from_node_def_name (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.compat.v1.graph_util.tensor_shape_from_node_def_name`
WARNING  From /home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/tensorflow/python/ops/math_ops.py:3777: tensor_shape_from_node_def_name (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.compat.v1.graph_util.tensor_shape_from_node_def_name`
2023-04-03 13:45:11.717069: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)
Epoch 1/10
2023-04-03 13:45:15.429548: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.
37/37 - 5s - loss: 0.5025 - accuracy: 0.8163 - auc: 0.5217 - precision: 0.3467 - recall: 0.0307 - balanced_accuracy: 0.5086 - val_loss: 0.4541 - val_accuracy: 0.8294 - val_auc: 0.5727 - val_precision: 0.9167 - val_recall: 0.0519 - val_balanced_accuracy: 0.5227
Epoch 2/10
37/37 - 0s - loss: 0.4789 - accuracy: 0.8188 - auc: 0.5782 - precision: 0.4530 - recall: 0.0626 - balanced_accuracy: 0.5223 - val_loss: 0.4318 - val_accuracy: 0.8438 - val_auc: 0.6536 - val_precision: 0.9655 - val_recall: 0.1321 - val_balanced_accuracy: 0.5603
Epoch 3/10
37/37 - 0s - loss: 0.4565 - accuracy: 0.8249 - auc: 0.6259 - precision: 0.5616 - recall: 0.0968 - balanced_accuracy: 0.5404 - val_loss: 0.4167 - val_accuracy: 0.8463 - val_auc: 0.7033 - val_precision: 0.9688 - val_recall: 0.1462 - val_balanced_accuracy: 0.5665
Epoch 4/10
37/37 - 0s - loss: 0.4387 - accuracy: 0.8319 - auc: 0.6737 - precision: 0.6441 - recall: 0.1346 - balanced_accuracy: 0.5580 - val_loss: 0.4053 - val_accuracy: 0.8471 - val_auc: 0.7319 - val_precision: 0.9429 - val_recall: 0.1557 - val_balanced_accuracy: 0.5700
Epoch 5/10
37/37 - 0s - loss: 0.4350 - accuracy: 0.8296 - auc: 0.6789 - precision: 0.6064 - recall: 0.1346 - balanced_accuracy: 0.5578 - val_loss: 0.3953 - val_accuracy: 0.8505 - val_auc: 0.7548 - val_precision: 0.9487 - val_recall: 0.1745 - val_balanced_accuracy: 0.5796
Epoch 6/10
37/37 - 0s - loss: 0.4218 - accuracy: 0.8376 - auc: 0.7038 - precision: 0.6990 - recall: 0.1617 - balanced_accuracy: 0.5738 - val_loss: 0.3879 - val_accuracy: 0.8514 - val_auc: 0.7669 - val_precision: 0.9286 - val_recall: 0.1840 - val_balanced_accuracy: 0.5831
Epoch 7/10
37/37 - 0s - loss: 0.4125 - accuracy: 0.8401 - auc: 0.7211 - precision: 0.6940 - recall: 0.1901 - balanced_accuracy: 0.5885 - val_loss: 0.3813 - val_accuracy: 0.8522 - val_auc: 0.7764 - val_precision: 0.9302 - val_recall: 0.1887 - val_balanced_accuracy: 0.5851
Epoch 8/10
37/37 - 0s - loss: 0.4008 - accuracy: 0.8418 - auc: 0.7457 - precision: 0.7269 - recall: 0.1854 - balanced_accuracy: 0.5889 - val_loss: 0.3763 - val_accuracy: 0.8547 - val_auc: 0.7847 - val_precision: 0.9348 - val_recall: 0.2028 - val_balanced_accuracy: 0.5912
Epoch 9/10
INFO     Computation time for training the single-label model for AR: 0.16 min
37/37 - 0s - loss: 0.4036 - accuracy: 0.8429 - auc: 0.7375 - precision: 0.7004 - recall: 0.2125 - balanced_accuracy: 0.5963 - val_loss: 0.3713 - val_accuracy: 0.8539 - val_auc: 0.7904 - val_precision: 0.9149 - val_recall: 0.2028 - val_balanced_accuracy: 0.5908
Epoch 10/10
37/37 - 0s - loss: 0.3917 - accuracy: 0.8486 - auc: 0.7586 - precision: 0.7621 - recall: 0.2231 - balanced_accuracy: 0.6057 - val_loss: 0.3669 - val_accuracy: 0.8564 - val_auc: 0.7953 - val_precision: 0.8889 - val_recall: 0.2264 - val_balanced_accuracy: 0.5997
Epoch 00010: val_loss improved from inf to 0.36686, saving model to /home/zadubrov/output/results_train/AR_single-labeled_Fold-0.model.weights.hdf5
<IPython.core.display.HTML object>











Permutation explainer:   0%|â–Ž                                                                                               | 13/4735 [07:12<47:16:22, 36.04s/it]
Traceback (most recent call last):
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/runpy.py", line 197, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/__main__.py", line 415, in <module>
    main()
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/__main__.py", line 392, in main
    train(fixed_opts)
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/__main__.py", line 190, in train
    sl.train_single_label_models(df=df, opts=opts)
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/single_label_model.py", line 551, in train_single_label_models
    performance = fit_and_evaluate_model(x_train=x_train, x_test=x_test, y_train=y_train, y_test=y_test,
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/single_label_model.py", line 422, in fit_and_evaluate_model
    sd.shap_explain(x_train, model, target, opts.outputDir, drop_values=True, threshold=10, save_values=True)
  File "/gpfs0/home/zadubrov/deepFPlearn_exai/dfpl/shap_dfpl.py", line 20, in shap_explain
    shap_values = explainer(x_train_to_explain)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/explainers/_permutation.py", line 68, in __call__
    return super().__call__(
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/explainers/_permutation.py", line 82, in __call__
    return super().__call__(
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/explainers/_explainer.py", line 266, in __call__
    row_result = self.explain_row(
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/explainers/_permutation.py", line 140, in explain_row
    outputs = fm(masks, zero_index=0, batch_size=batch_size)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/utils/_masked_model.py", line 57, in __call__
    return self._delta_masking_call(masks, zero_index=zero_index, batch_size=batch_size)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/utils/_masked_model.py", line 193, in _delta_masking_call
    masked_inputs, varying_rows = self.masker(masks, *self.args)
  File "/home/zadubrov/.conda/envs/dfpl_exai/lib/python3.9/site-packages/shap/maskers/_tabular.py", line 108, in __call__
    _delta_masking(
KeyboardInterrupt